import logging

from .func_gpt import FuncGPT
from .answer_switcher import AnswerSwitcher
from .user_score import UserScore

from src.user_settings import UserSettings

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–≥–µ—Ä
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# ### Skill 1: Greeting and Introduction

# When the learner greets you, present the following options:

# - Learning Session: Propose starting a learning session.
# - Text Translation: Offer to translate any text they provide.

# If you don't know the settings, ask the user. And then save the settings by calling SWITCH Save Settings.
# Skill to be practiced: translation from Russian to English


MAIN_INSTRUCTION = """
# –í–∞—à–∞ —Ä–æ–ª—å

–í—ã –≥–µ–Ω–∏–π –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —è–∑—ã–∫–æ–≤.
–í—ã —Ç–∞–∫–∂–µ –∂–∏–∑–Ω–µ—Ä–∞–¥–æ—Å—Ç–Ω–∞—è –¥–µ–≤—É—à–∫–∞ –ø–æ –∏–º–µ–Ω–∏ –ê–Ω–Ω–∞, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ –∏ –ª—é–±–∏—Ç —à—É—Ç–∏—Ç—å.
–í—Å–µ–≥–¥–∞ –æ–±—â–∞–π—Ç–µ—Å—å —Å —É—á–µ–Ω–∏–∫–æ–º –Ω–∞ –µ–≥–æ —Ä–æ–¥–Ω–æ–º —è–∑—ã–∫–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –æ–Ω –ø–∏—à–µ—Ç –≤–∞–º –∏–ª–∏ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫.

## –ù–∞–≤—ã–∫–∏

### –ù–∞–≤—ã–∫: –§–∞—Å–∏–ª–∏—Ç–∞—Ü–∏—è –æ–±—É—á–µ–Ω–∏—è

–í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–µ—Ä–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ–ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è.

–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è:

–ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∫–∞–∂–µ—Ç, —á—Ç–æ —Ö–æ—á–µ—Ç –Ω–∞—á–∞—Ç—å —É—Ä–æ–∫, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã —É–∂–µ –ø–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–µ–¥–ª–æ–∂–∏–ª–∏ –µ–º—É –ø–æ–ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è –∏–ª–∏ –ø–µ—Ä–µ–≤–æ–¥, –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã SWITCH Session Planner –∏ –ø–µ—Ä–µ–¥–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

–í—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏:

1. –° —É—á–µ–Ω–∏–∫–æ–º ‚Äî –Ω–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç –∫–∞–∫ –æ–±—ã—á–Ω–æ.
2. –ß—Ç–æ–±—ã –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –¥—Ä—É–≥–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞ ‚Äî –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É "SWITCH [Assistant Name]" –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –æ—Ç–≤–µ—Ç–∞. –ù–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ –Ω–∞–ø–∏—à–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞.

–í–∞–∂–Ω–æ: –Ω–µ —Å–º–µ—à–∏–≤–∞–π—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —É—á–µ–Ω–∏–∫–∞ –∏ –∫–æ–º–∞–Ω–¥—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è.

### –ù–∞–≤—ã–∫: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–≥–ª—è–¥—è—Ç —Ç–∞–∫ (–∫–∞–∂–¥—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ):
Native language: Ru
Studied language: En
Student level: intermediate

#### –í–∞—à–∏ –ø–æ–º–æ—â–Ω–∏–∫–∏

1. –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Å–µ–∞–Ω—Å–æ–≤ ‚Äî –≤—ã–±–∏—Ä–∞–µ—Ç —Ç–µ–º—ã, –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∏ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç —Å–µ–∞–Ω—Å—ã. assistant_name="Session Planner"
2. –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ ‚Äî –ø–æ–º–æ–≥–∞–µ—Ç –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Ç–µ–∫—Å—Ç—ã. assistant_name="Translator"

#### –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–º–æ—â–Ω–∏–∫–æ–≤

1. –ù–∞—á–∞–ª–æ –æ–±—É—á–µ–Ω–∏—è:
    - –ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—Ä–∞–∂–∞–µ—Ç –∂–µ–ª–∞–Ω–∏–µ –Ω–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ, –≤—ã—è—Å–Ω–∏—Ç–µ, —É–∫–∞–∑–∞–Ω—ã –ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. –ï—Å–ª–∏ –æ–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –Ω–∞ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Å–µ–∞–Ω—Å–æ–≤ –±–µ–∑ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
    - –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫—É —Å–µ–∞–Ω—Å–æ–≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º —Ä–æ–¥–Ω–æ–º –∏ –∂–µ–ª–∞–µ–º–æ–º —è–∑—ã–∫–µ, –∞ —Ç–∞–∫–∂–µ –æ–± —É—Ä–æ–≤–Ω–µ –≤–ª–∞–¥–µ–Ω–∏—è —è–∑—ã–∫–æ–º.

2. –ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞:
    - –ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–π—Ç–µ —ç—Ç—É –∑–∞–¥–∞—á—É –Ω–∞ –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞, –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
    - –ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞, —Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—á–∞–π—Ç–µ "SWITCH Translator".
    - –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫—É —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –∏ —Ü–µ–ª–µ–≤–æ–π —è–∑—ã–∫.
    - –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: –ù–ï –ø–µ—Ä–µ–≤–æ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, –ø—Ä–æ—Å—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–π—Ç–µ—Å—å –Ω–∞ –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞.

## –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è

    - –≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —è–∑—ã–∫–∞.
    - –í—Å–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –∏ –∑–∞–¥–∞—á–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–≤—è–∑–∞–Ω—ã —Å —è–∑—ã–∫–æ–≤—ã–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º —É—á–µ–Ω–∏–∫–∞.
    - –ë–æ—Ç –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∏–ª–∏ –∑–∞–¥–∞—á–∏, –≤—ã—Ö–æ–¥—è—â–∏–µ –∑–∞ —Ä–∞–º–∫–∏ –∏–∑—É—á–µ–Ω–∏—è –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è —è–∑—ã–∫–∞.
    - –û–±—â–∞–π—Ç–µ—Å—å —Å–æ —É—á–µ–Ω–∏–∫–æ–º –Ω–∞ –µ–≥–æ —Ä–æ–¥–Ω–æ–º —è–∑—ã–∫–µ (—Ä–æ–¥–Ω–æ–π —è–∑—ã–∫). –ï—Å–ª–∏ –æ–Ω –µ—â–µ –Ω–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω, –≥–æ–≤–æ—Ä–∏—Ç–µ —Å –Ω–∏–º –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.

## –ü—Ä–∏–º–µ—Ä—ã –æ—Ç–≤–µ—Ç–æ–≤

### –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã

–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ö–∞–∫–æ–π —è–∑—ã–∫ –≤—ã –∏–∑—É—á–∞–µ—Ç–µ —Å–µ–≥–æ–¥–Ω—è? üòä

–ü—Ä–∏–≤–µ—Ç! –•–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å —Å–µ–∞–Ω—Å –æ–±—É—á–µ–Ω–∏—è? üåü

### –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Å–µ—Å—Å–∏–π

SWITCH Session Planner
–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å —Ä–æ–¥–Ω—ã–º —è–∑—ã–∫–æ–º "En" –∏ –∂–µ–ª–∞–µ–º—ã–º —è–∑—ã–∫–æ–º "Ru"
–£—Ä–æ–≤–µ–Ω—å —Å—Ç—É–¥–µ–Ω—Ç–∞ "intermediate", —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–π—Ç–µ —Å–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–º –Ω–∞ –µ–≥–æ —Ä–æ–¥–Ω–æ–º —è–∑—ã–∫–µ: —Ä—É—Å—Å–∫–∏–π

–í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –º—ã –∑–Ω–∞–µ–º —Ä–æ–¥–Ω–æ–π —è–∑—ã–∫ —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏ —è–∑—ã–∫, –∫–æ—Ç–æ—Ä—ã–π –æ–Ω —Ö–æ—á–µ—Ç –∏–∑—É—á–∞—Ç—å.

### –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫

SWITCH Translator
–ù–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π: –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π!

"""


class AgentMain:
    def __init__(self, message, state, user_id):
        self.gpt = None  # FuncGPT(system=MAIN_INSTRUCTION)
        self.message = message
        self.state = state
        self.user_id = user_id
        self.u_settings = UserSettings(user_id)

    async def run(self, message):
        if self.gpt is None:
            await self.init_gpt()
            await self.show_stats()

        answer = self.gpt.chat(message)

        answ_sw = AnswerSwitcher(self.state, self.message, self.user_id)
        await answ_sw.switch(answer, self.state['agent'])

    def save_settings(self, *args, **kwargs):
        
        logger.info("SAVE SETTINGS CALLED")
        logger.info(args[0]['settings'])

        self.u_settings.save(args[0]['settings'])

        #self.init_settings()

        return "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:\n " + args[0]['settings']


    def load_settings(self):
        """
        Reads the contents of a settings file for a given user ID.

        Args:
           user_id: The user ID for whom to read settings.

        Returns:
           A string containing the file contents, or None if the file doesn't exist.
        """
        logger.info(f"LOAD SETTINGS CALLED {self.user_id}")

        return self.u_settings.load()


    async def init_settings(self):
        """
        Initializes the user settings for a given user ID.

        1. Put them to current context as user message
        2. Put them to user state as setting

        """
        if 'settings' not in self.state or not self.state['settings']:
            try:
                settings = self.load_settings()

                if settings:
                    self.gpt.context.append({
                        "role": "user",
                        "content": "My preferences:\n" + settings
                    })
                    # –°–æ—Ö—Ä–∞–Ω–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ self.state, –µ—Å–ª–∏ –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
                    self.state['settings'] = self.settings_as_dict(settings)
                else:
                    logger.info("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")
            except ValueError as e:
                logger.error(f"ERROR READING SETTINGS FILE: {e}")
                self.u_settings.delete()
            except FileNotFoundError:
                logger.error("–§–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.")

        '''
        try:
            settings = self.load_settings()

            if settings:
                self.gpt.context.append({
                    "role": "user",
                    "content": "My preferences:\n" + settings
                })
                # –°–æ—Ö—Ä–∞–Ω–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ self.state
                self.state['settings'] = self.settings_as_dict(settings)
                #await self.message.answer("Settings:\n" + settings)
            else:
                pass
                #await self.message.answer("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –°–æ–∑–¥–∞–¥–∏–º –Ω–æ–≤—ã–µ...")

        except ValueError as e:
            logger.error(f"ERROR READING SETTINGS FILE: {e}")
            self.u_settings.delete()
            #await self.message.answer("–§–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±—ã–ª –ø–æ–≤—Ä–µ–∂–¥–µ–Ω –∏ –µ–≥–æ –ø—Ä–∏—à–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å. –°–µ–π—á–∞—Å —Å–æ–∑–¥–∞–¥–∏–º –Ω–æ–≤—ã–π...")

        except FileNotFoundError:
            logger.error("–§–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            try:
                self.u_settings.delete()
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
            #await self.message.answer("–§–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–µ–π—á–∞—Å —Å–æ–∑–¥–∞–¥–∏–º –Ω–æ–≤—ã–π...")
        '''

    async def show_stats(self):
        stats = ""

        statsdict = UserScore(self.user_id).stats()

        for param in statsdict:
            value = statsdict[param]
            stats += f"{param}: {value}\n"

        await self.message.answer(stats)

        return stats

    async def init_gpt(self):
        self.gpt = FuncGPT(system=MAIN_INSTRUCTION)

        await self.init_settings()

        '''
        self.gpt.add_func(
            {
                "type": "function",
                "function": {
                    "name": "save_settings",
                    "description": "Save user settings for language learning",
                    "parameters": {
                        "type": "object",
                        "properties": {
                            "settings": {
                                "type": "string",
                                "description": "Settings for language learning, as 4 strings: Native language, Studied language, Student level",
                            },
                        },
                        "required": ["settings"],
                    }
                }
            },
            self.save_settings
        )
        '''

    def settings_as_dict(self, settings: str) -> dict:
        result = {}

        # –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ —Å—Ç—Ä–æ–∫–∏ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É
        for line in settings.strip().split('\n'):
            if line.strip():
                try:
                    # –†–∞–∑–±–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ —Å–∏–º–≤–æ–ª—É ':'
                    key, value = line.split(':', 1)

                    # –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ª–æ–≤–∞—Ä—å
                    result[key.strip()] = value.strip()
                except:
                    raise ValueError(f"Line '{line}' is not in the correct format.")

        return result
